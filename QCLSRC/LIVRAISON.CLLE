      /* >>PRE-COMPILER<<                                                 */
      /*   >>CRTCMD<<  CRTCLMOD MODULE(&LI/&OB) SRCFILE(&SL/&SF) +        */
      /*                 SRCMBR(&SM);                                     */
      /*   >>IMPORTANT<<                                                  */
      /*     >>PARM<<  OPTION(*EVENTF);                                   */
      /*     >>PARM<<  DBGVIEW(*ALL);                                     */
      /*   >>END-IMPORTANT<<                                              */
      /*   >>EXECUTE<<                                                    */
      /* >>END-PRE-COMPILER<<                                             */
             PGM        PARM(&NUMLOT &MACHINE &USER &MDP)

             DCL        VAR(&NUMLOT) TYPE(*DEC) LEN(9 0)
             DCL        VAR(&TGTRLS) TYPE(*CHAR) LEN(10) VALUE('*CURRENT')
             DCL        VAR(&NUMLOTC) TYPE(*CHAR) LEN(9)
             DCL        VAR(&BIBLIO) TYPE(*CHAR) LEN(10)
             DCL        VAR(&LISTOBJ) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MACHINE) TYPE(*CHAR) LEN(32)
             DCL        VAR(&USER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MDP) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBNAME) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CMD) TYPE(*CHAR) LEN(2000)
             DCL        VAR(&SAVF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CHEMINSAVO) TYPE(*CHAR) LEN(256)
             DCL        VAR(&CHEMINSAVD) TYPE(*CHAR) LEN(256)
             DCL        VAR(&PTYP) TYPE(*CHAR) LEN(1) VALUE('5')
             DCL        VAR(&PFICM) TYPE(*CHAR) LEN(10) VALUE('BUILDMSGF')
             DCL        VAR(&PMGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&PMGDT) TYPE(*CHAR) LEN(99)
             DCL        VAR(&SRCF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&PGM) TYPE(*CHAR) LEN(10) VALUE('GSTLOT20')

             DCLPRCOPT  ALWRTVSRC(*YES) TEXT('Préparation à la livraison et +
                          livraison') BNDDIR(I_BUILDER)

             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERREUR))

             CHGVAR     VAR(&NUMLOTC) VALUE(&NUMLOT)

             CHGVAR     VAR(&BIBLIO) VALUE('L' *TCAT &NUMLOTC)
             CHGVAR     VAR(&LISTOBJ) VALUE('O' *TCAT &NUMLOTC)

CRTPGMDST:   CRTDUPOBJ  OBJ(RSTOBJSQL) FROMLIB(*LIBL) OBJTYPE(*PGM) TOLIB(&BIBLIO)
             MONMSG     MSGID(CPF2130) EXEC(DO) /* S'il existe déjà, il est supprimé et recréer */
             DLTOBJ     OBJ(&BIBLIO/RSTOBJSQL) OBJTYPE(*PGM)
             GOTO       CMDLBL(CRTPGMDST)
             ENDDO

             /* Création de la SAVF qui va être envoyée via FTP               */
CRTSAVF:     CHGVAR     VAR(&SAVF) VALUE('S' *TCAT &NUMLOTC)
             CRTSAVF    FILE(&BIBLIO/&SAVF)
             MONMSG     MSGID(CPF7302) EXEC(DO) /* S'il existe déjà, il est supprimé et recréer */
             DLTOBJ     OBJ(&BIBLIO/&SAVF) OBJTYPE(*FILE)
             GOTO       CMDLBL(CRTSAVF)
             ENDDO

             /* Création de la bibliothèque Lot sur le système cible          */
             CHGVAR     VAR(&CMD) VALUE('CRTLIB LIB(' *TCAT &BIBLIO *TCAT ')')
             RUNRMTCMD  CMD(&CMD) RMTLOCNAME(&MACHINE *IP) RMTUSER(&USER) +
                          RMTPWD(&MDP)
             MONMSG     MSGID(CPF91CF) EXEC(DO)
                CHGVAR     VAR(&PMGDT) VALUE(&MACHINE)
                CHGVAR     VAR(&PMGID) VALUE('ERR0002')
                CALL       PGM(GSTMSG01) PARM(&PTYP &PFICM &PMGID &PMGDT &PGM)
                GOTO       CMDLBL(FIN)
             ENDDO

             /* Créer une SAVF comportant le numéro du lot sur le système distant */
             CHGVAR     VAR(&CMD) VALUE('CRTSAVF FILE(' *TCAT &BIBLIO *TCAT '/' +
                          *TCAT &SAVF *TCAT ')')
             RUNRMTCMD  CMD(&CMD) RMTLOCNAME(&MACHINE *IP) RMTUSER(&USER) +
                          RMTPWD(&MDP)
             MONMSG     MSGID(CPF91CF) EXEC(DO)
                CHGVAR     VAR(&PMGDT) VALUE(&MACHINE)
                CHGVAR     VAR(&PMGID) VALUE('ERR0003')
                CALL       PGM(GSTMSG01) PARM(&PTYP &PFICM &PMGID &PMGDT &PGM)
                GOTO       CMDLBL(FIN)
             ENDDO

             /* Sauvegarde des objets du lots dans une SAVF                               */
             CALLPRC    PRC(SAUV_OBJ_LOT) PARM((&NUMLOT) (&TGTRLS))

             /* Envoyer la SAVF sur le système cible par ftp dans la bib lot              */
             CHGVAR     VAR(&CHEMINSAVO) VALUE('/QSYS.LIB/' *TCAT &BIBLIO *TCAT +
                          '.LIB')
             CHGVAR     VAR(&CHEMINSAVD) VALUE(&CHEMINSAVO)

             CALLPRC    PRC(SCRIPTFTP) PARM((&USER) (&MDP) (&SAVF) (&SRCF) +
                          (&CHEMINSAVO) (&CHEMINSAVD))

             OVRDBF     FILE(INPUT) TOFILE(&SRCF) MBR(IN) OVRSCOPE(*CALLLVL)
             OVRDBF     FILE(OUTPUT) TOFILE(&SRCF) MBR(OUT) OVRSCOPE(*CALLLVL)

             FTP        RMTSYS(&MACHINE)

             CHGVAR     VAR(&JOBNAME) VALUE('R' *TCAT &NUMLOTC)

             /* Restauration du programme qui va extraire les objets et les copier à leur  */
             /* destination */
             CHGVAR     VAR(&CMD) VALUE('RSTOBJ OBJ(RSTOBJSQL) SAVLIB(' *TCAT +
                          &BIBLIO *TCAT ') DEV(*SAVF) SAVF(' *TCAT &BIBLIO *TCAT +
                          '/' *TCAT &SAVF *TCAT ') MBROPT(*NEW)')
             RUNRMTCMD  CMD(&CMD) RMTLOCNAME(&MACHINE *IP) RMTUSER(&USER) +
                          RMTPWD(&MDP)
             MONMSG     MSGID(CPF91CF) EXEC(DO)
                CHGVAR     VAR(&PMGDT) VALUE(&MACHINE)
                CHGVAR     VAR(&PMGID) VALUE('ERR0004')
                CALL       PGM(GSTMSG01) PARM(&PTYP &PFICM &PMGID &PMGDT &PGM)
                GOTO       CMDLBL(FIN)
             ENDDO

             /* Restauration de la table de référence  */
             CHGVAR     VAR(&CMD) VALUE('RSTOBJ OBJ(' *TCAT &LISTOBJ *TCAT ') +
                          SAVLIB(' *TCAT &BIBLIO *TCAT ') DEV(*SAVF) SAVF(' *TCAT +
                          &BIBLIO *TCAT '/' *TCAT &SAVF *TCAT ') MBROPT(*NEW)')
             RUNRMTCMD  CMD(&CMD) RMTLOCNAME(&MACHINE *IP) RMTUSER(&USER) +
                          RMTPWD(&MDP)
             MONMSG     MSGID(CPF91CF) EXEC(DO)
                CHGVAR     VAR(&PMGDT) VALUE(&MACHINE)
                CHGVAR     VAR(&PMGID) VALUE('ERR0004')
                CALL       PGM(GSTMSG01) PARM(&PTYP &PFICM &PMGID &PMGDT &PGM)
                GOTO       CMDLBL(FIN)
             ENDDO

             /* Lancement du programme qui va extraire les objets et les copier à leur */
             /* destination                                                            */
             /*CHGVAR     VAR(&CMD) VALUE('CALL' *BCAT &BIBLIO *TCAT '/RSTOBJSQL +
                          PARM(''' *TCAT &NUMLOTC *TCAT ''')')        */
             CHGVAR     VAR(&CMD) VALUE('SBMJOB CMD(CALL' *BCAT +
                          &BIBLIO *TCAT '/RSTOBJSQL PARM(''' *TCAT +
                          &NUMLOTC *TCAT ''')) JOB(R' *TCAT &NUMLOTC *TCAT ') +
                          HOLD(*YES)')
             RUNRMTCMD  CMD(&CMD) RMTLOCNAME(&MACHINE *IP) RMTUSER(&USER) +
                          RMTPWD(&MDP)
             MONMSG     MSGID(CPF91CF) EXEC(DO)
                CHGVAR     VAR(&PMGDT) VALUE(&MACHINE)
                CHGVAR     VAR(&PMGID) VALUE('ERR0005')
                CALL       PGM(GSTMSG01) PARM(&PTYP &PFICM &PMGID &PMGDT &PGM)
                GOTO       CMDLBL(FIN)
             ENDDO

             DLTF       FILE(&BIBLIO/&SAVF)
             DLTF       FILE(&BIBLIO/&LISTOBJ)
             DLTOBJ     OBJ(&BIBLIO/RSTOBJSQL) OBJTYPE(*PGM)


             GOTO       CMDLBL(FIN)

 ERREUR:     DMPCLPGM
             CALLPRC    PRC(gest_erreur)
 FIN:
             ENDPGM
