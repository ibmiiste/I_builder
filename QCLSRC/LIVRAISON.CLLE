      /* >>PRE-COMPILER<<                                                 */
      /*   >>CRTCMD<<  CRTCLMOD MODULE(&LI/&OB) SRCFILE(&SL/&SF) +        */
      /*                 SRCMBR(&SM);                                     */
      /*   >>IMPORTANT<<                                                  */
      /*     >>PARM<<  OPTION(*EVENTF);                                   */
      /*     >>PARM<<  DBGVIEW(*ALL);                                     */
      /*   >>END-IMPORTANT<<                                              */
      /*   >>EXECUTE<<                                                    */
      /* >>END-PRE-COMPILER<<                                             */
             PGM        PARM(&NUMLOT &MACHINE &USER &MDP)

             DCL        VAR(&NUMLOT) TYPE(*DEC) LEN(9 0)
             DCL        VAR(&NUMLOTC) TYPE(*CHAR) LEN(9)
             DCL        VAR(&BIBLIO) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MACHINE) TYPE(*CHAR) LEN(32)
             DCL        VAR(&USER) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MDP) TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBNAME) TYPE(*CHAR) LEN(10)
             DCL        VAR(&GESTDATA) TYPE(*CHAR) LEN(1)
             DCL        VAR(&NUMALEA) TYPE(*DEC) LEN(15 0)
             DCL        VAR(&NUMALEC) TYPE(*CHAR) LEN(9)
             DCL        VAR(&CMD) TYPE(*CHAR) LEN(2000)
             DCL        VAR(&FICSV) TYPE(*CHAR) LEN(10)
             DCL        VAR(&RAND) TYPE(*DEC) LEN(15 0) VALUE(999999999)
             DCL        VAR(&SAVF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CHEMINSAVO) TYPE(*CHAR) LEN(256)
             DCL        VAR(&CHEMINSAVD) TYPE(*CHAR) LEN(256)

             DCLPRCOPT  ALWRTVSRC(*YES) TEXT('Préparation à la livraison +
                          et livraison') BNDDIR(I_BUILDER)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERREUR))

             CHGVAR     VAR(&NUMLOTC) VALUE(&NUMLOT)

             CHGVAR     VAR(&BIBLIO) VALUE('L' *TCAT &NUMLOTC)

             CRTDUPOBJ  OBJ(DSTLOT10) FROMLIB(I_BUILDER) +
                          OBJTYPE(*PGM) TOLIB(&BIBLIO)

             CHGVAR     VAR(&SAVF) VALUE('S' *TCAT &NUMLOTC)

             CRTSAVF    FILE(&BIBLIO/&SAVF)

             CHGVAR     VAR(&CMD) VALUE('CRTLIB LIB(' *TCAT &BIBLIO *TCAT ')')
             RUNRMTCMD  CMD(&CMD) RMTLOCNAME(&MACHINE *IP) RMTUSER(&USER) +
                          RMTPWD(&MDP)

             CHGVAR     VAR(&CMD) VALUE('CRTSAVF FILE(' *TCAT &BIBLIO *TCAT '/' +
                          *TCAT &SAVF *TCAT ')')

             RUNRMTCMD  CMD(&CMD) RMTLOCNAME(&MACHINE *IP) RMTUSER(&USER) +
                          RMTPWD(&MDP)

             CALLPRC    PRC(CRTSAVLOT) PARM((&NUMLOT))


             CHGVAR     VAR(&CHEMINSAVO) VALUE('/QSYS.LIB/' *TCAT &BIBLIO *TCAT +
                          '.LIB')
             CHGVAR     VAR(&CHEMINSAVD) VALUE(&CHEMINSAVO)

             CALLPRC    PRC(SCRIPTFTP) PARM((&USER) (&MDP) (&SAVF) (&SRCF) +
                          (&CHEMINSAVO) (&CHEMINSAVD))

             OVRDBF     FILE(INPUT) TOFILE(&SRCF) MBR(IN)
             OVRDBF     FILE(OUTPUT) TOFILE(&SRCF) MBR(OUT)

             FTP        RMTSYS(&MACHINE)

             CHGVAR     VAR(&JOBNAME) VALUE('R' *TCAT &NUMLOTC)

             CHGVAR     VAR(&CMD) VALUE('RSTOBJ OBJ(DSTLOT10) SAVLIB(' *TCAT +
                          &BIBLIO *TCAT ') DEV(*SAVF) SAVF(' *TCAT &BIBLIO *TCAT +
                          '/' *TCAT &SAVF *TCAT ') MBROPT(*NEW) ALWOBJDIF(*ALL)')
             RUNRMTCMD  CMD(&CMD) RMTLOCNAME(&MACHINE *IP) RMTUSER(&USER) +
                          RMTPWD(&MDP)

             CHGVAR     VAR(&CMD) VALUE('CALL' *BCAT &BIBLIO *TCAT '/DSTLOT10 +
                          PARM(' *TCAT &NUMLOTC *TCAT ')')
             RUNRMTCMD  CMD(&CMD) RMTLOCNAME(&MACHINE *IP) RMTUSER(&USER) +
                          RMTPWD(&MDP)

             DLTF       FILE(&BIBLIO/&SAVF)

             GOTO       CMDLBL(FIN)

 ERREUR:     DMPCLPGM
             CALLPRC    PRC(gest_erreur)
 FIN:
             ENDPGM
