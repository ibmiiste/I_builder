      /* >>PRE-COMPILER<<                                                 */
      /*   >>CRTCMD<<  CRTCLMOD MODULE(&LI/&OB) SRCFILE(&SL/&SF) +        */
      /*                 SRCMBR(&SM);                                     */
      /*   >>IMPORTANT<<                                                  */
      /*     >>PARM<<  OPTION(*EVENTF);                                   */
      /*     >>PARM<<  DBGVIEW(*ALL);                                     */
      /*   >>END-IMPORTANT<<                                              */
      /*   >>EXECUTE<<                                                    */
      /* >>END-PRE-COMPILER<<                                             */

             PGM        PARM(&PREBIBSRC &PREFICSRC &USESRCMBR &BIBDST +
                          &OBJDST &TYPOBJ &BIBSRC &FICSRC &MBRSRC +
                          &OPTIMIZE &FAILED &FILEATTACH)

             DCL        VAR(&PREBIBSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&PREFICSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&USESRCMBR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&BIBDST) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OBJDST) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TYPOBJ) TYPE(*CHAR) LEN(7)
             DCL        VAR(&BIBSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FICSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MBRSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OPTIMIZE) TYPE(*CHAR) LEN(20)
             DCL        VAR(&OPTIMIZSQL) TYPE(*CHAR) LEN(20)
             DCL        VAR(&FAILED) TYPE(*DEC) LEN(10 0)
             DCL        VAR(&TYPSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&NUMALEA) TYPE(*DEC) LEN(15 0)
             DCL        VAR(&NUMALEC) TYPE(*CHAR) LEN(9)
             DCL        VAR(&RAND) TYPE(*DEC) LEN(15 0) VALUE(999999999)
             DCL        VAR(&SAUV_TAB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ATROBJ) TYPE(*CHAR) LEN(10)
             DCL        VAR(&QTEMP) TYPE(*CHAR) LEN(10) VALUE('QTEMP')
             DCL        VAR(&EXISTS) TYPE(*LGL)
             DCL        VAR(&OBJET) TYPE(*CHAR) LEN(20)
             DCL        VAR(&TYPOBJE) TYPE(*CHAR) LEN(10) VALUE('*FILE     +
                          ')
             DCL        VAR(&RTRSRCSTD) TYPE(*LGL)
             DCL        VAR(&FILEATTACH) TYPE(*CHAR) LEN(10000)

             DCLPRCOPT  ALWRTVSRC(*YES) TEXT('Génération d''un objet avec +
                          STRPREPRC') BNDDIR(SERVICE)

             /* Récupération du type de source                             */
             RTVMBRD    FILE(&BIBSRC/&FICSRC) MBR(&MBRSRC *SAME) +
                          SRCTYPE(&TYPSRC)


             /* En cas de précompilation SQL l'OPTIMIZE doit être mis dans COMPILOPT*/
             /* de la commande de compilation                                       */
             IF         COND(&TYPSRC *EQ 'SQLRPGLE') THEN(DO)
                CHGVAR     VAR(&OPTIMIZSQL) VALUE('''OPTIMIZE(' *TCAT +
                             &OPTIMIZE *TCAT ')''')
                CHGVAR     VAR(&OPTIMIZE) VALUE(&OPTIMIZSQL)
             ENDDO

             /* Récupération du type d'objet pour s'assurer que s'il existe il  */
             /* faut sauvegarder les données avant création de la table/fichier */
             RTVOBJD    OBJ(&BIBDST/&OBJDST) OBJTYPE(&TYPOBJ) +
                          OBJATR(&ATROBJ)
             MONMSG     MSGID(CPF9812)
             /* Si le type d'objet est TABLE ou FICHIER, les données sont conservées */
             /* dans un fichier temporaire pour être recopiées en fin de CONSTRUCT   */
             IF         COND(&ATROBJ *EQ 'PF') THEN(DO)
                CHGVAR     VAR(&OBJET) VALUE(&OBJDST *CAT &BIBDST)
                CALLPRC    PRC(EXISTS) PARM((&OBJET) (&TYPOBJE)) +
                             RTNVAL(&EXISTS)
                IF         COND(&EXISTS *EQ '1') THEN(DO)
                CALLPRC    PRC(ALEATOIRE) PARM((&RAND)) RTNVAL(&NUMALEA)
                CHGVAR     VAR(&NUMALEC) VALUE(&NUMALEA)
                CHGVAR     VAR(&SAUV_TAB) VALUE('A' *TCAT &NUMALEC)
                CPYF       FROMFILE(&BIBDST/&OBJDST) +
                             TOFILE(&QTEMP/&SAUV_TAB) MBROPT(*REPLACE) +
                             CRTFILE(*YES)
                ENDDO
             ENDDO

             /* Création de l'objet                                                */
 STANDARD:   STRPREPRC  USESRCFILE(&PREBIBSRC/&PREFICSRC) +
                          USESRCMBR(&USESRCMBR) OPTION(*EVENTF) +
                          CHGOBJD(*NO) LIB(&BIBDST) OBJ(&OBJDST) +
                          SRCLIB(&BIBSRC) SRCFILE(&FICSRC) SRCMBR(&MBRSRC) +
                          USER0(&OPTIMIZE)
             /* Au cas où il n'y a pas de scripts spécifique dans le source */
             /* On va rechercher le script standard PRE de création         */
             MONMSG     MSGID(PRZ0028) EXEC(DO)
                CALLPRC    PRC(SOURCE_STANDARD) PARM((&TYPOBJ) (&TYPSRC) +
                             (&PREBIBSRC) (&PREFICSRC) (&USESRCMBR)) +
                             RTNVAL(&RTRSRCSTD)
                IF         COND(&RTRSRCSTD *EQ '1') THEN(GOTO +
                             CMDLBL(STANDARD))
             ENDDO
             MONMSG     MSGID(CPF0000) EXEC(CALLPRC PRC(GSTERRSTR) +
                          PARM((&FAILED) (&FILEATTACH) (&OBJET)))


             IF         COND(&ATROBJ *EQ 'PF' *AND &EXISTS *EQ '1') +
                          THEN(DO)
                CPYF       FROMFILE(&QTEMP/&SAUV_TAB) +
                             TOFILE(&BIBDST/&OBJDST) MBROPT(*ADD) +
                             CRTFILE(*YES) FMTOPT(*MAP *DROP)

                DLTF       FILE(&QTEMP/&SAUV_TAB)
             ENDDO
             ENDPGM
