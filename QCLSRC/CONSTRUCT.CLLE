      /* >>PRE-COMPILER<<                                                 */
      /*   >>CRTCMD<<  CRTCLMOD MODULE(&LI/&OB) SRCFILE(&SL/&SF) +        */
      /*                 SRCMBR(&SM);                                     */
      /*   >>IMPORTANT<<                                                  */
      /*     >>PARM<<  OPTION(*EVENTF);                                   */
      /*     >>PARM<<  DBGVIEW(*ALL);                                     */
      /*   >>END-IMPORTANT<<                                              */
      /*   >>EXECUTE<<                                                    */
      /* >>END-PRE-COMPILER<<                                             */

             PGM        PARM(&PREBIBSRC &PREFICSRC &PRESRCMBR &BIBDST +
                          &OBJDST &TYPOBJ &BIBSRC &FICSRC &MBRSRC +
                          &OPTIMIZE &FAILED &FILEATTACH &LISTBIB)

             DCL        VAR(&PREBIBSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&PREFICSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&PRESRCMBR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&BIBDST) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OBJDST) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TYPOBJ) TYPE(*CHAR) LEN(10)
             DCL        VAR(&BIBSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FICSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MBRSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&OPTIMIZE) TYPE(*CHAR) LEN(20)
             DCL        VAR(&OPTIMIZSQL) TYPE(*CHAR) LEN(20)
             DCL        VAR(&FAILED) TYPE(*DEC) LEN(10 0)
             DCL        VAR(&TYPSRC) TYPE(*CHAR) LEN(10)
             DCL        VAR(&NUMALEA) TYPE(*DEC) LEN(15 0)
             DCL        VAR(&NUMALEC) TYPE(*CHAR) LEN(9)
             DCL        VAR(&RAND) TYPE(*DEC) LEN(15 0) VALUE(999999999)
             DCL        VAR(&SAUV_TAB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ATROBJ) TYPE(*CHAR) LEN(10)
             DCL        VAR(&QTEMP) TYPE(*CHAR) LEN(10) VALUE('QGPL')
             DCL        VAR(&EXISTS) TYPE(*LGL)
             DCL        VAR(&OBJET) TYPE(*CHAR) LEN(20)
             DCL        VAR(&TYPOBJE) TYPE(*CHAR) LEN(10) VALUE('*FILE     +
                          ')
             DCL        VAR(&RTRSRCSTD) TYPE(*LGL)
             DCL        VAR(&FILEATTACH) TYPE(*CHAR) LEN(10000)
             DCL        VAR(&LISTBIB) TYPE(*CHAR) LEN(10) /* Liste +
                          de bibliothèque à utiliser avec la +
                          commande POSLIB */
             DCL        VAR(&QUOTE) TYPE(*CHAR) LEN(1) VALUE('''')

             DCLPRCOPT  ALWRTVSRC(*YES) TEXT('Génération d''un objet avec +
                          STRPREPRC') BNDDIR(I_BUILDER)

             /* Mise en ligne des bibliothèque de l'application           */
             POSLIB     LISTE(&LISTBIB) LIB(*NONE)

             /* Récupération du type de source                             */
             RTVMBRD    FILE(&BIBSRC/&FICSRC) MBR(&MBRSRC *SAME) +
                          SRCTYPE(&TYPSRC)


             /* En cas de précompilation SQL l'OPTIMIZE doit être mis dans COMPILOPT*/
             /* de la commande de compilation                                       */
             IF         COND(&TYPSRC *EQ 'SQLRPGLE') THEN(DO)
                CHGVAR     VAR(&OPTIMIZSQL) VALUE('''OPTIMIZE(' *TCAT +
                             &OPTIMIZE *TCAT ')''')
                CHGVAR     VAR(&OPTIMIZE) VALUE(&OPTIMIZSQL)
             ENDDO
             /* Si &OPTIMIZE contient *NONE, il faut ajouter des quotes         */
             IF         COND(&OPTIMIZE *EQ '*NONE               ') +
                          THEN(CHGVAR VAR(&OPTIMIZE) VALUE(&QUOTE *TCAT +
                          &OPTIMIZE *TCAT &QUOTE))
             /* Récupération du type d'objet pour s'assurer que s'il existe il  */
             /* faut sauvegarder les données avant création de la table/fichier */
 RTVOBJD:    RTVOBJD    OBJ(&BIBDST/&OBJDST) OBJTYPE(&TYPOBJE) +
                          OBJATR(&ATROBJ)
             MONMSG     MSGID(CPF9812 CPF9801 CPF9811)
             MONMSG     MSGID(CPF3203) EXEC(DO)
                SNDPGMMSG  MSG('''Objet en cours d''utilisation, nouvel +
                             essai dans 30 secondes''')
                DLYJOB     DLY(30)
                GOTO       CMDLBL(RTVOBJD)
             ENDDO
             /* Si le type d'objet est TABLE ou FICHIER, les données sont conservées */
             /* dans un fichier temporaire pour être recopiées en fin de CONSTRUCT   */
             IF         COND(&ATROBJ *EQ 'PF') THEN(DO)
                CHGVAR     VAR(&OBJET) VALUE(&OBJDST *CAT &BIBDST)
                CALLPRC    PRC(EXISTS) PARM((&OBJET) (&TYPOBJE)) +
                             RTNVAL(&EXISTS)
                IF         COND(&EXISTS *EQ '1') THEN(DO)
                CALLPRC    PRC(ALEATOIRE) PARM((&RAND)) RTNVAL(&NUMALEA)
                CHGVAR     VAR(&NUMALEC) VALUE(&NUMALEA)
                CHGVAR     VAR(&SAUV_TAB) VALUE('A' *TCAT &NUMALEC)
                CPYF       FROMFILE(&BIBDST/&OBJDST) +
                             TOFILE(&QTEMP/&SAUV_TAB) FROMMBR(*ALL) +
                             TOMBR(*FROMMBR) MBROPT(*REPLACE) +
                             CRTFILE(*YES) ERRLVL(*NOMAX)
                ENDDO
             ENDDO

             /* Création de l'objet                                                */
 STANDARD:   STRPREPRC  USESRCFILE(&PREBIBSRC/&PREFICSRC) +
                          USESRCMBR(&PRESRCMBR) OPTION(*EVENTF) +
                          CHGOBJD(*NO) LIB(&BIBDST) OBJ(&OBJDST) +
                          SRCLIB(&BIBSRC) SRCFILE(&FICSRC) SRCMBR(&MBRSRC) +
                          USER0(&OPTIMIZE)
             /* Au cas où il n'y a pas de scripts spécifique dans le source */
             /* On va rechercher le script standard PRE de création         */
             MONMSG     MSGID(PRZ0028) EXEC(DO)
                CALLPRC    PRC(SOURCE_STANDARD) PARM((&TYPOBJ) (&TYPSRC) +
                             (&PREBIBSRC) (&PREFICSRC) (&PRESRCMBR)) +
                             RTNVAL(&RTRSRCSTD)
                IF         COND(&RTRSRCSTD *EQ '1') THEN(GOTO +
                             CMDLBL(STANDARD))
             ENDDO
             MONMSG     MSGID(PRZ0002) EXEC(CALLPRC PRC(GSTERRSTR) +
                          PARM((&FAILED) (&FILEATTACH) (&OBJET)))
             RTVOBJD    OBJ(&BIBDST/&OBJDST) OBJTYPE(&TYPOBJE) +
                          OBJATR(&ATROBJ)
             MONMSG     MSGID(CPF9812 CPF9801 CPF9811)
             IF         COND(&ATROBJ *EQ 'LF') THEN(GRTOBJAUT +
                          OBJ(&BIBDST/&OBJDST) OBJTYPE(*FILE) +
                          USER(*PUBLIC) AUT(*USE))

             IF         COND(&ATROBJ *EQ 'PF' *AND &EXISTS *EQ '1') +
                          THEN(DO)
                CPYF       FROMFILE(&QTEMP/&SAUV_TAB) +
                             TOFILE(&BIBDST/&OBJDST) FROMMBR(*ALL) +
                             TOMBR(*FROMMBR) MBROPT(*ADD) CRTFILE(*YES) +
                             FMTOPT(*MAP *DROP) ERRLVL(*NOMAX)

                DLTF       FILE(&QTEMP/&SAUV_TAB)
             ENDDO
             ENDPGM
